2+2
2+2*2
install.packages('swirl')
library('swirl')
library("swirl")
"swirl" == 'swirl'
source('~/project/ML/courses/006_Dataanalysis_edx_MIT/R/Module_2_-_Homework.R')
source('~/project/ML/courses/006_Dataanalysis_edx_MIT/R/Module_2_-_Homework.R')
n <- 8
p <- 0.2
successes <- rbinom(n,1,p)
#Question 9&10
hist(successes)
n <- 8
p <- 0.2
successes <- rbinom(n,0,p)
#Question 9&10
hist(successes)
n <- 8
p <- 0.2
successes <- rbinom(n,10000,p)
#Question 9&10
hist(successes)
n <- 8
p <- 0.2
successes <- rbinom(10000,n,p)
#Question 9&10
hist(successes)
dbinom(10000,n,p)
dbinom(7,10,p)
dbinom(1,10,p)
dbinom(2,10,p)
dbinom(7,10,0.65)
1-dbinom(8,10,0.65)-dbinom(9,10,0.65)-dbinom(10,10,0.65)
#Part C
dbinom(6,10,0.65)+dbinom(7,10,0.65)+dbinom(8,10,0.65)+dbinom(9,10,0.65)+dbinom(10,10,0.65)
pbinom(c(6:10),10,0.65)
qbinom(c(6:10),10,0.65)
dbinom(c(6:10),10,0.65)
pbinom(7,10,0.65)
1-pbinom(5,10,0.65)
binom_draws <- as_tibble(data.frame(successes))
estimated_pf <- binom_draws %>%
rm(list = ls())
rm(list = ls())
n <- 8
p <- 0.2
successes <- rbinom(10000,n,p)
#Question 9&10
hist(successes)
#Question 14
binom_draws <- as_tibble(data.frame(successes))
library(tibble)
install.packages("tibble")
binom_draws <- as_tibble(data.frame(successes))
estimated_pf <- binom_draws %>%
12e;
estimated_pf <- binom_draws %>%
group_by(successes) %>%
count(n=n()) %>%
mutate(freq=n/sum(successes))
library(dplyr)
estimated_pf <- binom_draws %>%
group_by(successes) %>%
count(n=n()) %>%
mutate(freq=n/sum(successes))
estimated_pf <- binom_draws %>%
group_by(successes) %>%
filter(n=n()) %>%
mutate(freq=n/sum(binom_draws))
estimated_pf <- binom_draws %>%
group_by(successes) %>%
summarize(n=n()) %>%
mutate(freq=n/sum(binom_draws))
ggplot(estimated_pf, aes(x=successes, y=freq)) +
geom_col() +
ylab("Estimated Density")
library(ggplot)
install.packages("ggplot2")
library(ggplot2)
ggplot(estimated_pf, aes(x=successes, y=freq)) +
geom_col() +
ylab("Estimated Density")
estimated_pf <- binom_draws %>%
group_by(successes) %>%
summarize(n=n()) %>%
mutate(freq=n/sum(n))
ggplot(estimated_pf, aes(x=successes, y=freq)) +
geom_col() +
ylab("Estimated Density")
my_binom<-as_tibble(list(x=0:n, prob=dbinom(0:n, n, p)))
#Plot the computed theoretical density.
ggplot(my_binom, aes(x=x, y=prob)) + geom_col() +
ylab("Analytical Density")
calculated_cdf <- my_binom %>%
mutate(cdf=cumsum(prob))
#Plot the computed cdf
ggplot(calculated_cdf, aes(x=x, y=cdf)) + geom_step() +
ylab("CDF")
setwd("~/project/ML/courses/006_Dataanalysis_edx_MIT/R")
#Getting the data
gender_data <- as_tibble(read.csv("Gender_StatsData.csv"))
tibble
tibble()
library('tibble')
gender_data <- as_tibble(read.csv("Gender_StatsData.csv"))
View(gender_data)
head(gender_data)
str(gender_data)
teenager_fr <- filter(gender_data, Indicator.Code == "SP.ADO.TFRT")
teenager_fr <- select(gender_data, Indicator.Code == "SP.ADO.TFRT")
source('~/.active-rstudio-document')
#Getting the data
gender_data <- as_tibble(read.csv("Gender_StatsData.csv"))
teenager_fr <- filter(gender_data, Indicator.Code == "SP.ADO.TFRT")
?mean
mean(teenager_fr$X1960, na.rm = TRUE)
sd(teenager_fr$X1960, na.rm = TRUE)
mean(teenager_fr$2000, na.rm = TRUE)
sd(teenager_fr$2000, na.rm = TRUE)
mean(teenager_fr$X2000, na.rm = TRUE)
sd(teenager_fr$X2000, na.rm = TRUE)
byincomelevel <- filter(teenager_fr,Country.Code%in%c(LIC,MIC,HIC, WLD))
byincomelevel <- filter(Country.Code%in%c("LIC","MIC","HIC",teenager_fr))
byincomelevel <- filter(teenager_fr,Country.Code%in%c("LIC","MIC","HIC", "WLD"))
mean(teenager_fr$X1975, na.rm = TRUE)std
byincomelevel <- filter(teenager_fr,Country.Code%in%c("LIC","MIC","HIC", "WLD"))
gather?
q
?gather
plotdata_bygroupyear <- gather(byincomelevel,X1960:X2015,Country.Code,FertilityRate) %>%
select(Year, Country.Name, Country.Code, FertilityRate)
colnames(byincomelevel)[1]<-"Country.Name"
plotdata_bygroupyear <- gather(byincomelevel,X1960:X2015,Country.Code,FertilityRate) %>%
select(Year, Country.Name, Country.Code, FertilityRate)
byincomelevel<-colnames(byincomelevel)[1]="Country.Names")
plotdata_bygroupyear <- gather(byincomelevel,X1960:X2015,Country.Code,FertilityRate) %>%
select(Year, Country.Name, Country.Code, FertilityRate)
